getwd()
donguri1 <- read.csv("donguri1.csv", header=TRUE)
getwd()
setwd("~/git/rProject/searchDonguri")
getwd()
donguri2_v2 <- read.csv("./donguri2.csv")
library(xgboost)
library(xgboost)
library(Matrix)
library(Matrix)
library(Matrix)
library(xgboost)
library(Matrix)
library(ipred)
library(kernlab)
set.seed(50)
(rowdata <- nrow(donguri1))
random_ids <- sample(rowdata, rowdata/2)
don1.train <- donguri1[random_ids,]
don1.test <- donguri1[-random_ids,]
don1.bag <- bagging(type~., data=don1.train, nbagg=40)
don1.bagprd <- predict(don1.bag, don1.test[,-3], type="class")
(don1.bagt <- table(don1.test[,3], don1.bagprd))
sum(diag(don1.bagt))/sum(don1.bagt)
don2.train <-donguri2[random_ids,]
don2.test <- donguri2[-random_ids,]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
don2.test <- donguri2[-random_ids,]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
View(donguri1)
View(donguri2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
View(don2.test)
View(don2.train)
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
donguri3 <- read.csv("./donguri3.csv")
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
(rowdata3 <- nrow(donguri3))
random_ids3 <- sample(rowdata3, rowdata3/2)
View(donguri3)
don3.train <- donguri3[random_ids3, 2:4]
don3.test <- donguri3[random_ids3m 2;4]
don3.test <- donguri3[random_ids3, 2;4]
don3.test <- donguri3[random_ids3, 2:4]
don3.bag <- bagging(type~. data=don3.train, nbagg=40)
don3.bag <- bagging(type~., data=don3.train, nbagg=40)
don3.bagprd <- predict(don3.bag, don3.test[,-3], type="class")
(don3.bagt <- table(don3.test[,3], don3.bagprd))
sum(diag(don3.bagt))/sum(don3.bagt)
set.seed(80)
(rowdata3 <- nrow(donguri3))
random_ids3 <- sample(rowdata3, rowdata3/2)
don3.train <- donguri3[random_ids3, 2:4]
don3.test <- donguri3[random_ids3, 2:4]
don3.bag <- bagging(type~., data=don3.train, nbagg=40)
don3.bagprd <- predict(don3.bag, don3.test[,-3], type="class")
(don3.bagt <- table(don3.test[,3], don3.bagprd))
sum(diag(don3.bagt))/sum(don3.bagt)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
don3.train <- donguri3[random_ids3, 2:4]
don3.train <- donguri3[random_ids3, 2:4]
don3.train <- donguri3[random_ids3, 2:4]
don3.train <- donguri3[random_ids3, 2:4]
don3.test <- donguri3[-random_ids3, 2:4]
don3.bag <- bagging(type~., data=don3.train, nbagg=40)
don3.bagprd <- predict(don3.bag, don3.test[,-3], type="class")
(don3.bagt <- table(don3.test[,3], don3.bagprd))
sum(diag(don3.bagt))/sum(don3.bagt)
library(ada)
install.packages(ada)
install.packages("ada")
library(ada)
don2.ada <- ada(type~., data=don2.train, iter=20)
don2.adap <- predict(don2.ada, don2.test[,-3], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-3], don2.test[,3])
don2.ada <- ada(type~., data=don2.train, iter=20)
don2.adap <- predict(don2.ada, don2.test[,-4], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-4], don2.test[,4])
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-3], don2.test[,3])
summary(don2.ada)
license()
getwd()
library(ipred)
library(kernlab)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(80)
(rowdata3 <- nrow(donguri3))
random_ids3 <- sample(rowdata3, rowdata3/2)
don3.train <- donguri3[random_ids3, 2:4]
don3.test <- donguri3[-random_ids3, 2:4]
don3.bag <- bagging(type~., data=don3.train, nbagg=40)
don3.bagprd <- predict(don3.bag, don3.test[,-3], type="class")
(don3.bagt <- table(don3.test[,3], don3.bagprd))
sum(diag(don3.bagt))/sum(don3.bagt)
library(ada)
don2.ada <- ada(type~., data=don2, iter=20)
don2.ada <- ada(type~., data=donguri2, iter=20)
summary(don2.ada)
don2.ada <- ada(type~., data=don2.train, iter=20)
summary(don2.ada)
don2.ada <- ada(type~., data=don2.test, iter=20)
summary(don2.ada)
View(don3.test)
don2.adap <- predict(don2.ada, don2.test[,-3], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-3], don2.test[,3])
donguri2_v12 <- read.csv("./donguri2_v12")
donguri2_v12 <- read.csv("./donguri2_v12.csv")
(rowdata <- nrow(donguri2_v12))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2_v12[random_ids,2:4]
don2.train <-donguri2_v12[random_ids]
don2.train <-donguri2_v12[random_ids,1:3]
View(donguri2_v12)
don2.train <-donguri2_v12[random_ids,]
don2.test <- donguri2_v12[-random_ids,]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(80)
don2.ada <- ada(type~., data=don2.test, iter=20)
don2.ada <- ada(type~., data=don2.test, iter=20)
don2.ada <- ada(type~., data=don2.test, iter=20)
don2.ada <- ada(type~., data=don2.test, iter=20)
don2.ada <- ada(type~., data=don2.test, iter=20)
summary(don2.ada)
don2.adap <- predict(don2.ada, don2.test[,-3], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-3], don2.test[,3])
View(don2.test)
set.seed(50)
(rowdata <- nrow(donguri2))
random_ids <- sample(rowdata, rowdata/2)
don2.train <-donguri2[random_ids,2:4]
don2.test <- donguri2[-random_ids,2:4]
don2.bag <- bagging(type~., data=don2.train, nbagg=40)
don2.bagprd <- predict(don2.bag, don2.test[,-3], type="class")
(don2.bagt <- table(don2.test[,3], don2.bagprd))
sum(diag(don2.bagt))/sum(don2.bagt)
set.seed(80)
(rowdata3 <- nrow(donguri3))
random_ids3 <- sample(rowdata3, rowdata3/2)
don3.train <- donguri3[random_ids3, 2:4]
don3.test <- donguri3[-random_ids3, 2:4]
don3.bag <- bagging(type~., data=don3.train, nbagg=40)
don3.bagprd <- predict(don3.bag, don3.test[,-3], type="class")
(don3.bagt <- table(don3.test[,3], don3.bagprd))
sum(diag(don3.bagt))/sum(don3.bagt)
don2.ada <- ada(type~., data=don2.test, iter=20)
summary(don2.ada)
don2.adap <- predict(don2.ada, don2.test[,-3], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
plot(don2.ada, kappa=TRUE, don2.test[,-3], don2.test[,3])
View(donguri2_v12)
px <- seq(-4,4, 0.03)
py <- seq(-4, 4, 0.03)
pgrid <- expand.grid(px,py)
don2.ada <- ada(type~., donguri2_v12, iter=20)
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
View(pgrid)
View(pgrid)
px <- seq(5,15, 0.1)
py <- seq(5, 15, 0.1)
pgrid <- expand.grid(px,py)
name(pgrid) <- c("tate","yoko")
names(pgrid) <- c("tate","yoko")
View(pgrid)
don2.ada <- ada(type~., donguri2_v12, iter=20)
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=1,xlim=c(5,15),ylim=c(5,15))
View(donguri2_v12)
px <- seq(5,25, 0.1)
py <- seq(5, 25, 0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
don2.ada <- ada(type~., donguri2_v12, iter=20)
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=1,xlim=c(5,25),ylim=c(5,25))
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
px <- seq(10,25, 0.1)
py <- seq(5, 15, 0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=0.5,xlim=c(10,25),ylim=c(5,15))
par(new=T)
contour(px,py,arra(don2.adap,dim=c(length(px),length(py))),xlim=c(10,25),ylim=c(5,15))
contour(px,py,array(don2.adap,dim=c(length(px),length(py))),xlim=c(10,25),ylim=c(5,15))
px <- seq(5,25, 0.1)
py <- seq(5, 25, 0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
don2.ada <- ada(type~., donguri2_v12, iter=20)
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
par(new=T)
contour(px,py,array(don2.adap,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25))
contour(px,py,array(don2.adap,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25))
library(ada)
don2.ada <- ada(type~., data=don2.test, iter=20)
summary(don2.ada)
don2.adap <- predict(don2.ada, don2.test[,-3], type="vector")
(don2.adat <- table(don2.test[,3], don2.adap))
sum(diag(don2.adat))/sum(don2.adat)
px <- seq(5,25, 0.1)
py <- seq(5, 25, 0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
don2.ada <- ada(type~., donguri2_v12, iter=20)
xors.adap <- predict(don2.ada, newdata=pgrid, type='vector')
plot(donguri2_v12[,-3],col=c(rep('red',43),rep('blue',46)),pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
par(new=T)
contour(px,py,array(don2.adap,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25))
getwd()
library(randomForest)
don.rf <- randomForest(type~., donguri2, mtry=2)
print(don.rf)
importance(d.rf)
importance(don.rf)
View(donguri2_v12)
View(donguri2_v2)
View(donguri2_v12)
don.rf <- randomForest(type~., donguri2_v12, mtry=2)
don.rf <- randomForest(type~., donguri2_v12, mtry=2)
print(don.rf)
importance(don.rf)
don.rf <- randomForest(type~., donguri2[,2:4], mtry=2)
print(don.rf)
importance(don.rf)
table(don$type, predict(don.rf,d[-4]))
table(donguri2$type, predict(don.rf,donguri2[-4]))
require("randomForest")
don.rf <- randomForest(type~., donguri2_v12, mtry=2)
View(donguri2_v12)
don.rf <- randomForest(type~., donguri2, mtry=2)
tuneRF(donguri2_v12[,-4],donguri2_v12[,4],doBest=T)
tuneRF(donguri2_v12[,-3],donguri2_v12[,3],doBest=T)
px <- seq(5,25,0.1)
py <^ seq(5,25,0.1)
py <- seq(5,25,0.1)
pgrid <- expand.rid(px,py)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
View(donguri2)
plot(donguri2[1:43,-4], col="blue", pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
donguri2 <- read.csv("./donguri2.csv")
don.rf <- randomForest(type~., donguri2, mtry=2)
print(don.rf)
importance(don.rf)
table(donguri2$type, predict(don.rf,donguri2[-4]))
require("randomForest")
px <- seq(5,25,0.1)
py <- seq(5,25,0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
table(donguri2$type, predict(don.rf,donguri2[-3]))
require("randomForest")
px <- seq(5,25,0.1)
py <- seq(5,25,0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
plot(donguri2[1:43,-3], col="blue", pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
point(donguri2[44:89,-3], col="red",pch=19,cex=0.5)
points(donguri2[44:89,-3], col="red",pch=19,cex=0.5)
par(new=T)
contour(px,py,array(out.don.rf,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
contour(px,py,array(don.rf,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
contour(px,py,array(out.don.rf,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
contour(px,py,array(don.rf,dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
plot(donguri2[1:43,-3], col="blue", pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
points(donguri2[44:89,-3], col="red",pch=19,cex=0.5)
par(new=T)
contour(px,py,array(don.rf, dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
tuneRF(donguri2[,-3],donguri2[,3],doBest=T)
don.rf <- randomForest(type~., donguri2, mtry=2)
don.rf <- randomForest(type~., donguri2)
px <- seq(5,25,0.1)
py <- seq(5,25,0.1)
pgrid <- expand.grid(px,py)
names(pgrid) <- c("tate","yoko")
plot(donguri2[1:43,-3], col="blue", pch=19,cex=0.5,xlim=c(5,25),ylim=c(5,25))
points(donguri2[44:89,-3], col="red",pch=19,cex=0.5)
par(new=T)
contour(px,py,array(don.rf, dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
contour(px,py,array(out.don.rf, dim=c(length(px),length(py))),xlim=c(5,25),ylim=c(5,25),col="purple",lwd=1,drawlabels=F,levels=0.5)
